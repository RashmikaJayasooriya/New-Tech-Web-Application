/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-09-10 18:04:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.frontend;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class productlistning_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/Users/uvind/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar!/META-INF/jsp-inheritance.tld", Long.valueOf(1692219220000L));
    _jspx_dependants.put("file:/C:/Users/uvind/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1692435033110L));
    _jspx_dependants.put("jar:file:/C:/Users/uvind/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/fn.tld", Long.valueOf(1602854172000L));
    _jspx_dependants.put("file:/C:/Users/uvind/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar", Long.valueOf(1692244256642L));
    _jspx_dependants.put("jar:file:/C:/Users/uvind/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602854172000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_layout_005fextends_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_layout_005fextends_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:extends
    lk.callidora.jsp.inheritance.ExtendsTag _jspx_th_layout_005fextends_005f0 = new lk.callidora.jsp.inheritance.ExtendsTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fextends_005f0);
    try {
      _jspx_th_layout_005fextends_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/views/frontend/productlistning.jsp(6,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fextends_005f0.setName("base");
      _jspx_th_layout_005fextends_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_layout_005fextends_005f0, null));
      _jspx_th_layout_005fextends_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fextends_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_layout_005fput_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_parent, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:put
    lk.callidora.jsp.inheritance.PutTag _jspx_th_layout_005fput_005f0 = new lk.callidora.jsp.inheritance.PutTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fput_005f0);
    try {
      _jspx_th_layout_005fput_005f0.setJspContext(_jspx_page_context);
      _jspx_th_layout_005fput_005f0.setParent(_jspx_parent);
      // /WEB-INF/views/frontend/productlistning.jsp(7,4) name = block type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fput_005f0.setBlock("contents");
      _jspx_th_layout_005fput_005f0.setJspBody(new Helper( 1, _jspx_page_context, _jspx_th_layout_005fput_005f0, null));
      _jspx_th_layout_005fput_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fput_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_parent, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(new jakarta.servlet.jsp.tagext.TagAdapter((jakarta.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /WEB-INF/views/frontend/productlistning.jsp(111,48) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("myList");
      // /WEB-INF/views/frontend/productlistning.jsp(111,48) name = value type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/frontend/productlistning.jsp(111,48) 'camera(0),console(0),laptop(0),mobile(0),drone(0),smartHome(0),camera(0),console(0),laptop(0),mobile(0)'",_jsp_getExpressionFactory().createValueExpression("camera(0),console(0),laptop(0),mobile(0),drone(0),smartHome(0),camera(0),console(0),laptop(0),mobile(0)",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new jakarta.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_parent, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(new jakarta.servlet.jsp.tagext.TagAdapter((jakarta.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /WEB-INF/views/frontend/productlistning.jsp(114,48) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/frontend/productlistning.jsp(114,48) '${myList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${myList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/frontend/productlistning.jsp(114,48) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("item");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                                                    <div class=\"productlist-card px-0 mx-0 mx-md-1\">\r\n");
            out.write("                                                        <div class=\"col-12\">\r\n");
            out.write("                                                            <div class=\"row\"></div>\r\n");
            out.write("                                                        </div>\r\n");
            out.write("                                                        <a href=\"singleproductview\" class=\"text-decoration-none\">\r\n");
            out.write("                                                            <div class=\"card\">\r\n");
            out.write("                                                                <div class=\"col-12\" height=\"205\">\r\n");
            out.write("                                                                    <img src=\"assets/images/products/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(".jpeg\" class=\"productlist-card-img\" alt=\"...\">\r\n");
            out.write("                                                                </div>\r\n");
            out.write("\r\n");
            out.write("                                                                <div class=\"col-5 d-inline-block product-grid\">\r\n");
            out.write("                                                                    <ul class=\"productlist-links\">\r\n");
            out.write("                                                                        <li class=\"productlist-link-li\"><a href=\"wishlist\" class=\"productlist-link-a wishlist-selected\"><i class=\"fa fa-heart\"></i></a></li>\r\n");
            out.write("                                                                        <li class=\"productlist-link-li\"><a href=\"cart\" class=\"productlist-link-a cart-selected\"><i class=\"fa fa-shopping-cart\"></i></a></li>\r\n");
            out.write("                                                                    </ul>\r\n");
            out.write("                                                                </div>\r\n");
            out.write("                                                                <div class=\"card-body text-center\">\r\n");
            out.write("                                                                    <h6 class=\"card-title text-black\">New Xiaomi Redmi Note 11 Graphite</h6>\r\n");
            out.write("                                                                    <div class=\"mt-1\">\r\n");
            out.write("                                                                        <ul class=\"d-flex list-unstyled mb-1 justify-content-center\">\r\n");
            out.write("                                                                            <li><i class=\"fa fa-star rated\"></i></li>\r\n");
            out.write("                                                                            <li><i class=\"fa fa-star rated\"></i></li>\r\n");
            out.write("                                                                            <li><i class=\"fa fa-star rated\"></i></li>\r\n");
            out.write("                                                                            <li><i class=\"fa fa-star rated\"></i></li>\r\n");
            out.write("                                                                            <li><i class=\"fa fa-star\"></i></li>\r\n");
            out.write("                                                                            <li><span class=\"text-success\">&nbsp;(899)</span>\r\n");
            out.write("                                                                            </li>\r\n");
            out.write("                                                                        </ul>\r\n");
            out.write("                                                                    </div>\r\n");
            out.write("                                                                    <button class=\"product-btn text-white\">\r\n");
            out.write("                                                                        <span class=\"product-btn-text-one\">Rs.5000.00</span>\r\n");
            out.write("                                                                        <span class=\"product-btn-text-two\">Buy Now</span>\r\n");
            out.write("                                                                    </button>\r\n");
            out.write("                                                                </div>\r\n");
            out.write("                                                            </div>\r\n");
            out.write("                                                        </a>\r\n");
            out.write("                                                    </div>\r\n");
            out.write("                                                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          throw new jakarta.servlet.jsp.SkipPageException();
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private jakarta.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, jakarta.servlet.jsp.JspContext jspContext, jakarta.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("    ");
      if (_jspx_meth_layout_005fput_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write('\r');
      out.write('\n');
      return false;
    }
    public boolean invoke1( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("        <!-- Body Start -->\r\n");
      out.write("        <div class=\"container-fluid p-0\">\r\n");
      out.write("            <div class=\"row-fluid m-0\">\r\n");
      out.write("                <div class=\"col-12\">\r\n");
      out.write("                    <div class=\"row  mt-3\">\r\n");
      out.write("                        <!-- BreadCrumb -->\r\n");
      out.write("                        <div class=\"col-6 ps-4 mt-2\">\r\n");
      out.write("                            <nav style=\"--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);\" aria-label=\"breadcrumb\">\r\n");
      out.write("                                <ol class=\"breadcrumb\">\r\n");
      out.write("                                    <li class=\"breadcrumb-item\"><a href=\"/newtech/\">Home</a></li>\r\n");
      out.write("                                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Product Listning</li>\r\n");
      out.write("                                </ol>\r\n");
      out.write("                            </nav>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-6\">\r\n");
      out.write("                            <button class=\"filter-btn btn float-end\" style=\"box-shadow: none;\">Filter <i class=\"bi bi-funnel-fill\"></i></button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- BODY CONTENT START -->\r\n");
      out.write("                <div class=\"col-12 mb-4\">\r\n");
      out.write("                    <div class=\"d-flex flex-row\">\r\n");
      out.write("                        <div class=\"filter-canvas\">\r\n");
      out.write("                            <!-- filter-canvas content here -->\r\n");
      out.write("                            <div class=\"row px-lg-4 px-3\">\r\n");
      out.write("                                <div class=\"col-12 border border-1 border-dark py-3\">\r\n");
      out.write("                                    <div class=\"row ps-2\">\r\n");
      out.write("                                        <div class=\"col-12\">\r\n");
      out.write("                                            <button class=\"btn btn-danger btn-sm float-end filter-canvas-close-btn\">X</button>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12\">\r\n");
      out.write("                                            <p class=\"fs-6 mb-1 fw-bold\">Category</p>\r\n");
      out.write("                                            <ul class=\"text-secondary list-unstyled\">\r\n");
      out.write("                                                <li> <span class=\"filter-sub-item\">Electronics</span><br></li>\r\n");
      out.write("                                                <li> <span class=\"filter-sub-item\">Mobile</span><br></li>\r\n");
      out.write("                                                <li> <span class=\"filter-sub-item\">Drones</span><br></li>\r\n");
      out.write("                                                <li> <span class=\"filter-sub-item\">Earphones</span></li>\r\n");
      out.write("                                            </ul>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12\">\r\n");
      out.write("                                            <div class=\"row\">\r\n");
      out.write("                                                <p class=\"fs-6 mb-1 fw-bold\">Price</p>\r\n");
      out.write("                                                <div class=\"col-4 mb-3 px-0\">\r\n");
      out.write("                                                    <input type=\"email\" class=\"form-control form-control-sm\" id=\"exampleFormControlInput1\" placeholder=\"Min.\">\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                                <div class=\"col-1 px-1\">\r\n");
      out.write("                                                    <span>-</span>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                                <div class=\"col-4 mb-3 px-0\">\r\n");
      out.write("                                                    <input type=\"email\" class=\"form-control form-control-sm\" id=\"exampleFormControlInput1\" placeholder=\"Max.\">\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                                <div class=\"col-1\">\r\n");
      out.write("                                                    <button class=\"btn border-0 px-0 mx-0\" style=\"box-shadow: none;\"><i class=\"bi bi-arrow-right-circle-fill\"></i></button>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12 text-nowrap\">\r\n");
      out.write("                                            <p class=\"fs-6 mb-1 fw-bold\">Model</p>\r\n");
      out.write("                                            <ul class=\"text-secondary list-unstyled\">\r\n");
      out.write("                                                <li>\r\n");
      out.write("                                                    <div class=\"form-check filter-sub-item\">\r\n");
      out.write("                                                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n");
      out.write("                                                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n");
      out.write("                                                            Default checkbox\r\n");
      out.write("                                                        </label>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </li>\r\n");
      out.write("                                                <li>\r\n");
      out.write("                                                    <div class=\"form-check filter-sub-item\">\r\n");
      out.write("                                                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n");
      out.write("                                                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n");
      out.write("                                                            Default checkbox\r\n");
      out.write("                                                        </label>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </li>\r\n");
      out.write("                                                <li>\r\n");
      out.write("                                                    <div class=\"form-check filter-sub-item\">\r\n");
      out.write("                                                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n");
      out.write("                                                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n");
      out.write("                                                            Default checkbox\r\n");
      out.write("                                                        </label>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </li>\r\n");
      out.write("                                            </ul>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-12\">\r\n");
      out.write("                                            <div class=\"row\">\r\n");
      out.write("                                                <div class=\"col-auto d-grid\">\r\n");
      out.write("                                                    <button class=\"btn btn-primary btn-sm\">Clear All</button>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"list-body bg-dark overflow-x-auto\">\r\n");
      out.write("                            <!-- list-body content here -->\r\n");
      out.write("                            <div class=\"row px-3 mx-0\">\r\n");
      out.write("                                <div class=\"col-12 border border-1 border-dark py-3\">\r\n");
      out.write("                                    <div class=\"row\">\r\n");
      out.write("                                        <div class=\"col-12 px-0 mb-4\">\r\n");
      out.write("                                            <div class=\"row mx-0  px-0 justify-content-between\">\r\n");
      out.write("                                                ");
      if (_jspx_meth_c_005fset_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- BODY CONTENT END -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Body End -->\r\n");
      out.write("    ");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws jakarta.servlet.jsp.JspException
    {
      jakarta.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(jakarta.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
        }
        jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof jakarta.servlet.jsp.SkipPageException)
            throw (jakarta.servlet.jsp.SkipPageException) e;
        throw new jakarta.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
